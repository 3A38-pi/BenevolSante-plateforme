{% extends 'base.html.twig' %}

{% block title %}Détails de l'évaluation{% endblock %}

{% block body %}
    <div class="container d-flex justify-content-center align-items-center min-vh-100">
        <div class="evaluation-box card shadow-lg p-4 w-100">
            <h1 class="text-center mb-4 text-dark">{{ evaluation.name }}</h1>

            <table class="table table-striped">
                <thead class="bg-primary text-white">
                    <tr>
                        <th>Description</th>
                        <th>Date de création</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>{{ evaluation.description ?: 'Aucune description disponible.' }}</td>
                        <td>{{ evaluation.createdAt|date('d/m/Y H:i') }}</td>
                    </tr>
                </tbody>
            </table>

            <div class="mt-4">
                <h3 class="text-dark">Questions</h3>
           {% for question in evaluation.questions %}
    <div class="question-box p-3 mb-3 border rounded shadow-sm">
        <p class="fw-bold text-primary">{{ question.content }}</p>

        {% if question.openEnded %}
            <textarea id="response-text-{{ question.id }}" class="form-control mb-2" placeholder="Écrivez votre réponse ici..."></textarea>
            <button class="btn btn-primary" onclick="addResponse('{{ question.id }}', document.getElementById('response-text-{{ question.id }}').value, true)">Soumettre</button>
        {% else %}
            <div class="btn-group" role="group">
                <button type="button" class="btn btn-success" onclick="addResponse('{{ question.id }}', 'Vrai', false)">Vrai</button>
                <button type="button" class="btn btn-danger" onclick="addResponse('{{ question.id }}', 'Faux', false)">Faux</button>
            </div>
            <div class="mt-2">
                <label for="rating-{{ question.id }}" class="fw-bold">Note :</label>
                <select id="rating-{{ question.id }}" class="form-select mt-1">
                    <option value="1">1 - Mauvais</option>
                    <option value="2">2 - Passable</option>
                    <option value="3">3 - Moyen</option>
                    <option value="4">4 - Bon</option>
                    <option value="5">5 - Excellent</option>
                </select>
            </div>
        {% endif %}

        <div id="chatBox-{{ question.id }}" class="chat-box mt-3 p-2 border rounded">
            {% for response in question.responses %}
                <div class="chat-message">
                    <strong>{{ response.answer }}</strong>{% if not question.openEnded %} - Note: {{ response.rating }}{% endif %}
                </div>
            {% else %}
                <p class="text-muted">Aucune réponse disponible.</p>
            {% endfor %}
        </div>
    </div>
{% else %}
    <p class="text-muted">Aucune question disponible.</p>
{% endfor %}


            </div>
        </div>
    </div>

    <style>
        .evaluation-box {
            max-width: 900px;
            border-radius: 12px;
            background: #f8f9fa;
        }
        .chat-box {
            max-height: 200px;
            overflow-y: auto;
            background: #ffffff;
        }
        .chat-message {
            background: #d1ecf1;
            padding: 10px;
            border-radius: 8px;
            margin-bottom: 8px;
        }
        .question-box {
            background: #ffffff;
        }
    </style>

    <script>
function addResponse(questionId, responseText, isOpenEnded) {
    // Si c'est une question ouverte et qu'aucun texte n'est fourni, on arrête
    if (isOpenEnded && !responseText.trim()) {
        alert("Veuillez entrer une réponse avant de soumettre.");
        return;
    }

    let rating = null; // Initialisation de la note

    // Si ce n'est pas une question ouverte, récupérer la note sélectionnée
    if (!isOpenEnded) {
        rating = document.getElementById("rating-" + questionId).value;
    }

    // Envoi de la réponse via Fetch
    fetch("/save-response", {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify({
            question_id: questionId,
            answer: responseText,
            rating: rating, // Envoyer null si non applicable
        }),
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            let chatBox = document.getElementById("chatBox-" + questionId);
            let messageDiv = document.createElement("div");
            messageDiv.classList.add("chat-message");
            messageDiv.innerHTML = `<strong>${responseText}</strong>` + (rating ? ` - Note: ${rating}` : "");
            chatBox.appendChild(messageDiv);
            chatBox.scrollTop = chatBox.scrollHeight;
        } else {
            alert("Erreur : " + data.error);
        }
    })
    .catch(error => console.error("Erreur lors de l'enregistrement :", error));
}


    </script>
{% endblock %}